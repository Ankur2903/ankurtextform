{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","role","type","msg","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","aria-current","to","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","style","color","headling","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","handleLowClick","toLowerCase","handleXClick","i","length","split","About","myStyle","setMyStyle","btntext","setbtntext","aria-labelledby","data-bs-parent","App","setMode","setalert","showAlert","message","setTimeout","document","body","Router","changeNum1","changeNum2","utton","changeNum3","changeNum4","changeNum5","changeNum6","Switch","Route","exact","path","mode1","toggleMode1","TextFrom","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.135f9c70.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n    <strong>{props.alert.type} :  </strong>{props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\n \r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" to=\"/about\">about</Link>\r\n                    </li>\r\n                </ul>\r\n                {/* <form className=\"d-flex\" role=\"search\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                </form> */}\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} onClick={props.toggleMode}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Mode change</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n    )\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n  }\r\n  const handleLowClick = ()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n  }\r\n  const handleXClick = ()=>{\r\n    let newText = \"\";\r\n    for(let i=0;i<text.length;i++){\r\n      if(i===0 || (i>1 && text[i-2] === \".\")){\r\n        newText = newText + text[i].toUpperCase();\r\n      }\r\n      else{\r\n        newText = newText + text[i].toLowerCase();\r\n      }\r\n    }\r\n    setText(newText)\r\n  }\r\n  const handleOnChange = (event)=>{\r\n    setText(event.target.value);\r\n  }\r\n  const [text, setText] = useState('my name is ankur saini. i am a student.');\r\n  return  (\r\n    <>\r\n    <div className = \"container\">\r\n      <h1 style ={{color: props.mode===\"light\"?\"black\":\"white\"}}>{props.headling}</h1>\r\n      <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} style ={{backgroundColor: props.mode===\"dark\"?\"gray\":\"white\", color: props.mode===\"light\"?\"black\":\"white\"}} id=\"myBox\" rows=\"2\"></textarea>\r\n      </div>\r\n      <button className = \"btn btn-primary mx-2 my-2\" onClick = {handleUpClick} style ={{backgroundColor: props.mode===\"dark\"?\"white\":\"black\", color: props.mode===\"light\"?\"white\":\"black\"}}>Convert to upper</button>\r\n      <button className = \"btn btn-primary mx-2 my-2\" onClick = {handleLowClick} style ={{backgroundColor: props.mode===\"dark\"?\"white\":\"black\", color: props.mode===\"light\"?\"white\":\"black\"}}>Convert to lower</button>\r\n      <button className = \"btn btn-primary mx-2 my-2\" onClick = {handleXClick} style ={{backgroundColor: props.mode===\"dark\"?\"white\":\"black\", color: props.mode===\"light\"?\"white\":\"black\"}}>Currect</button>\r\n    </div>\r\n    <div className = \"container my-2\" style ={{color: props.mode===\"light\"?\"black\":\"white\"}}>\r\n      <h1>Your Text summary</h1>\r\n      <p>No of letters = {text.length}</p>\r\n      <p>No of words = {text.split(\" \").length >1?text.split(\" \").length:text.length===0?0:1}</p>\r\n      <p>You can read it in {0.008*text.split(\" \").length} minutes</p>\r\n      <p>preview = {text.length>0 ? text:\"Enter Your Text\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    const [myStyle, setMyStyle] = useState({\r\n        color: 'white',\r\n        backgroundColor: 'black'\r\n    })\r\n    \r\n    const [btntext, setbtntext] = useState(\"Enable Light Mode\")\r\n\r\n    const toggleStyle = ()=>{\r\n        if(myStyle.color === 'white'){\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setbtntext(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setMyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setbtntext(\"Enable Light Mode\")\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className = \"container\" style={myStyle}>\r\n        <h1>About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n          <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          Accordion Item #1\r\n          </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n          <div className=\"accordion-body\" style={myStyle}>\r\n            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar'; \nimport TextFrom from './components/TextForm';\nimport About from './components/About';\nimport React, {useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route, \n} from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setalert] = useState(null)\n\n  const showAlert =(message, type)=>{\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setalert(null);\n    }, 2000)\n  }\n  const changeNum1 = ()=>{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"white mode has been enabled\", \"Success\")\n  }\n  const changeNum2 = ()=>{\n    setMode('light');\n    document.body.style.backgroundColor = 'yellow';\n    showAlert(\"yellow mode has been enabled\", \"Success\")\n  }\n  const changeNum3 = ()=>{\n    setMode('dark');\n    document.body.style.backgroundColor = 'green';\n    showAlert(\"green mode has been enabled\", \"Success\")\n  }\n  const changeNum4 = ()=>{\n    setMode('dark');\n    document.body.style.backgroundColor = 'red';\n    showAlert(\"red mode has been enabled\", \"Success\")\n  }\n  const changeNum5 = ()=>{\n    setMode('dark');\n    document.body.style.backgroundColor = 'blue';\n    showAlert(\"blue mode has been enabled\", \"Success\")\n  }\n  const changeNum6 = ()=>{\n    setMode('dark');\n    document.body.style.backgroundColor = 'gray';\n    showAlert(\"black mode has been enabled\", \"Success\")\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n        setMode('dark');\n        document.body.style.backgroundColor = 'gray';\n        showAlert(\"dark mode has been enabled\", \"Success\")\n    }\n    else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"light mode has been enabled\", \"Success\")\n\n    }\n}\n\n  return (\n    <div>\n      <Router>\n      <Navbar title = \"Wirte below to convert to upper case\" mode = {mode} toggleMode = {toggleMode}/>\n      <Alert alert = {alert}/>\n      <button className=\"btn btn-primary mx-3 my-3\" type=\"submit\" style = {{backgroundColor: \"white\", color: \"black\"}} onClick={changeNum1}>light</button>\n      <button className=\"btn btn-primary mx-3 my-3\" type=\"submit\" style = {{backgroundColor: \"yellow\", color: \"black\"}}onClick={changeNum2}>Yellow</button>\n      <b utton className=\"btn btn-primary mx-3 my-3\" type=\"submit\" style = {{backgroundColor: \"green\"}} onClick={changeNum3}>Green</b>\n      <button className=\"btn btn-primary mx-3 my-3\" type=\"submit\" style = {{backgroundColor: \"red\"}} onClick={changeNum4}>Red</button>\n      <button className=\"btn btn-primary mx-3 my-3\" type=\"submit\" style = {{backgroundColor: \"blue\"}} onClick={changeNum5}>Blue</button>\n      <button className=\"btn btn-primary mx-3 my-3\" type=\"submit\" style = {{backgroundColor: \"black\"}} onClick={changeNum6}>balck</button>\n      <div className = \"container\"></div> \n      {/* <About /> */}\n      {/* <TextFrom headling = \"Enter your text below\" mode = {mode} toggleMode = {toggleMode}/> */}\n      <Switch>\n          <Route exact path=\"/about\">\n            <About  mode1 = {mode} toggleMode1 = {toggleMode}/>\n          </Route>\n          <Route exact path=\"/\">\n            <TextFrom headling = \"Enter your text below\" mode = {mode} toggleMode = {toggleMode}/>\n          </Route>\n        </Switch> \n      </Router>\n    </div>\n  );\n}\n\nexport default App; \n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}